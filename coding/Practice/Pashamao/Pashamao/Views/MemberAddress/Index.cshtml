@{ Layout = "~/Views/Shared/MainHomeLayout.cshtml"; }
@{
    ViewBag.Title = "會員地址管理";
}
<body>
    <link href="https://cdn.jsdelivr.net/npm/sweetalert2@11/dist/sweetalert2.min.css" rel="stylesheet">
    <link href="~/css/MainMember.css" rel="stylesheet" type="text/css" />
    <script src="https://cdn.jsdelivr.net/npm/sweetalert2@11/dist/sweetalert2.all.min.js"></script>
    <main>
        <h1 class="text-center mb-3">@ViewBag.Title</h1>
        <table id="addressTable" class="table" style="table-layout:fixed" border="1">
            <thead>
                <tr>
                    <th style="display:flex">
                        <button type="button" id="btnGetAllAddress" class="btn btn-outline-dark" onclick='getAll()'>查詢全部</button>
                    </th>
                </tr>
                <tr class="bg-gradient text-bg-dark ">
                    <th scope="col">#</th>
                    <th scope="col">地址Id<button id="sortById" class="btn btnSort" onclick="getSortedAddress('sortById', 'AddressId')"></button></th>
                    <th scope="col">會員Id<button id="sortByMember" class="btn btnSort" onclick="getSortedAddress('sortByMember', 'MemberId')"></button></th>
                    <th scope="col">地址<button id="sortByAddress" class="btn btnSort" onclick="getSortedAddress('sortByAddress', 'MemberAddress')"></button></th>
                    <th scope="col">郵遞區號<button id="sortByPostalCode" class="btn btnSort" onclick="getSortedAddress('sortByPostalCode', 'PostalCode')"></button></th>
                    <th scope="col">修改資料</th>
                </tr>
            </thead>
            <tbody>
                <!-- 用來插入用戶資料的行將在這裡 -->
            </tbody>
        </table>
        <nav aria-label="Data navigation">
            <ul class="pagination justify-content-center">
                <li class="page-item"><button class="page-link" id="previousPage" onclick="previousPage()">Previous</button></li>
                <li class="page-item"><button class="page-link" id="firstPage" onclick="firstPage()">1</button></li>
                <li class="page-item ms-1 me-1">...</li>
                <li class="page-item"><button class="page-link" id="currentPage">1</button></li>
                <li class="page-item ms-1 me-1">...</li>
                <li class="page-item"><button class="page-link" id="lastPage" onclick="lastPage()">9</button></li>
                <li class="page-item"><button class="page-link" id="nextPage" onclick="nextPage()">Next</button></li>
            </ul>
        </nav>
        <script>

            let lastSortBtnColumn = "AddressId";
            let lastSortOrder = "Ascending";
            let lastSelectTxbId = "";
            let lastSelectColumn = "";
            let lastSelectValue = "";

            getAll();

            function getAll() {
                let btns = document.querySelectorAll(`.btnSort`);
                btns.forEach(btn => {
                    btn.style.backgroundImage = "url(../images/arrowAscending.png)";
                })
                lastSelectTxbId = "";
                lastSelectColumn = "";
                lastSelectValue = "";
                getAddress("AddressId", 1, "Ascending");
            }

            function firstPage() {
                document.getElementById("currentPage").innerHTML = 1;

                if (lastSelectColumn === "" || lastSelectValue === "" || lastSelectTxbId === "") {
                    getAddress(lastSortBtnColumn, 1, lastSortOrder);
                }
            }

            function previousPage() {
                let oldCurrentPage = parseInt(document.getElementById("currentPage").innerHTML);
                let newCurrentPage = oldCurrentPage;

                if (oldCurrentPage > 1) {
                    newCurrentPage = oldCurrentPage - 1;
                    document.getElementById("currentPage").innerHTML = newCurrentPage;
                }
                else {
                    newCurrentPage = 1
                }

                if (lastSelectColumn === "" | lastSelectValue === "" | lastSelectTxbId === "") {
                    getAddress(lastSortBtnColumn, newCurrentPage, lastSortOrder);
                }
            }

            function nextPage() {
                let oldCurrentPage = parseInt(document.getElementById("currentPage").innerHTML);
                let maxPage = parseInt(document.getElementById("lastPage").innerHTML)
                let newCurrentPage = oldCurrentPage

                if (oldCurrentPage < maxPage) {
                    newCurrentPage = oldCurrentPage + 1;
                    document.getElementById("currentPage").innerHTML = newCurrentPage;
                }
                else {
                    newCurrentPage = maxPage;
                }

                if (lastSelectColumn === "" || lastSelectValue === "" || lastSelectTxbId === "") {
                    getAddress(lastSortBtnColumn, newCurrentPage, lastSortOrder);
                }
            }

            function lastPage() {
                let maxPage = parseInt(document.getElementById("lastPage").innerHTML);
                document.getElementById("currentPage").innerHTML = maxPage;

                if (lastSelectColumn === "" | lastSelectValue === "" | lastSelectTxbId === "") {
                    getAddress(lastSortBtnColumn, maxPage, lastSortOrder);
                }
            }

            function getAddress(column, page, sortOrder) {
                lastSortBtnColumn = column;
                lastSortOrder = sortOrder;
                axios.post("/MemberAddress/GetSortedAddress", { Column: column, Page: page, SortOrder: sortOrder })
                    .then(response => {
                        if (response.data != "noAddress") {
                            populateTable(response.data.Item1);
                            document.getElementById("lastPage").innerHTML = response.data.Item2;
                        }
                    })
                    .catch(error => {
                        console.error("fail", error);
                    })
            }

            function getSortedAddress(btnId, column) {
                let btn = document.querySelector(`#${btnId}`);
                let currentBackground = getComputedStyle(btn).backgroundImage;
                let sortOrder;
                let currentPage = document.getElementById("currentPage").innerHTML;
                lastSortBtnColumn = column;

                if (currentBackground.includes('arrowAscending.png')) {
                    sortOrder = 'Descending';
                    btn.style.backgroundImage = "url('../images/arrowDescending.png')";
                }
                else {
                    sortOrder = 'Ascending';
                    btn.style.backgroundImage = "url(../images/arrowAscending.png)";
                }
                lastSortOrder = sortOrder;

                if (lastSelectColumn === "" | lastSelectValue === "" | lastSelectTxbId === "") {
                    getAddress(column, currentPage, sortOrder);
                }
            }

            function populateTable(addresses) {
                const tableBody = document.getElementById("addressTable").getElementsByTagName('tbody')[0];

                tableBody.innerHTML = '';

                addresses.forEach((address, index) => {
                    const row = document.createElement('tr');

                    const rowSort = document.createElement('th');
                    rowSort.textContent = index + 1;
                    rowSort.scope = "row";
                    row.appendChild(rowSort);

                    const cellAddressId = document.createElement('td');
                    cellAddressId.textContent = address.AddressId;

                    row.appendChild(cellAddressId);

                    const cellMemberId = document.createElement('td');
                    cellMemberId.textContent = address.MemberId
                    row.appendChild(cellMemberId);

                    const cellAddress = document.createElement('td');
                    cellAddress.textContent = address.City + address.District + address.Detail;
                    row.appendChild(cellAddress);

                    const cellPostalCode = document.createElement('td');
                    cellPostalCode.textContent = address.PostalCode;
                    row.appendChild(cellPostalCode);

                    const cellEditData = document.createElement('td');

                    const cellEditDataBtn = document.createElement("button");
                    cellEditDataBtn.className = "btnEditAddressData";
                    cellEditDataBtn.style.backgroundImage = "url('../images/Pencel.jpg')";
                    cellEditDataBtn.addEventListener("click", function () {
                    });
                    cellEditData.appendChild(cellEditDataBtn);
                    row.appendChild(cellEditData);

                    // 把這一行加到表格中
                    tableBody.appendChild(row);
                });
            }

        </script>
    </main>
</body>