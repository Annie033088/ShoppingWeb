
@{ Layout = "~/Views/Shared/MainHomeLayout.cshtml"; }
@{
    ViewBag.Title = "角色管理";
}
<body>

    <link href="https://cdn.jsdelivr.net/npm/sweetalert2@11/dist/sweetalert2.min.css" rel="stylesheet">
    <link href="~/css/UserRole.css" rel="stylesheet" type="text/css" />
    <script src="https://cdn.jsdelivr.net/npm/sweetalert2@11/dist/sweetalert2.all.min.js"></script>
    <main>
        <h1 class="text-center mb-3">@ViewBag.Title</h1>
        <table id="roleTable" class="table" style="table-layout:fixed" border="1">
            <thead>
                <tr>
                    <th>
                        <button type="button" id="btnShowAddRoleCkb" class="btn btn-outline-dark">新增</button>
                        <button type="button" id="btnGetAllRole" class="btn btn-outline-dark " onclick='getAllRole()'>查詢全部</button>
                    </th>
                    <th class="text-lg-end">
                        <label>輸入搜尋ID</label>
                    </th>
                    <th>
                        <input type="text" id="txbSelectRoleId" style="width:100%" pattern="^[\d]{1,8}$" required />
                    </th>
                    <th class="text-lg-start">
                        <button type="button" id="btnSelectRoleId" class="btn btn-outline-dark" onclick='selectRole();'>搜尋</button>
                    </th>
                    <th>
                        <span id="searchWarning" class="text-danger"></span>
                    </th>
                </tr>
                <tr class="bg-gradient text-bg-dark ">
                    <th scope="col">#</th>
                    <th scope="col">Id</th>
                    <th scope="col">角色名稱</th>
                    <th scope="col">描述</th>
                    <th scope="col">修改</th>
                </tr>
            </thead>
            <tbody>
            </tbody>
        </table>

        <div id="overlay"></div>
        <div id="ckbPopUp" class="popUp ">
            <div class="popUpContent ms-3">
                <button id="btnCloseCkb" class="btn btn-light mt-1 ">&times;</button>
                <h3>選擇各權限</h3>
                <input type="checkbox" id="ckbMain1"> 使用者管理
                <div style="padding-left: 20px;">
                    <label><input type="checkbox" class="subCkb" id="ckb1" data-Parent="ckbMain1" value="SelectUser"> 搜尋使用者</label><br>
                    <label><input type="checkbox" class="subCkb" id="ckb2" data-Parent="ckbMain1" value="CreateUser"> 創建使用者</label><br>
                    <label><input type="checkbox" class="subCkb" id="ckb3" data-Parent="ckbMain1" value="EditUser"> 修改使用者</label><br>
                    <label><input type="checkbox" class="subCkb" id="ckb4" data-Parent="ckbMain1" value="DelUser"> 刪除使用者</label><br>
                </div>
                <input type="checkbox" id="ckbMain2"> 會員管理
                <div style="padding-left: 20px;">
                    <label><input type="checkbox" class="subCkb" id="ckb5" data-Parent="ckbMain2" value="SelectMember"> 搜尋會員</label><br>
                    <label><input type="checkbox" class="subCkb" id="ckb6" data-Parent="ckbMain2" value="CreateMember"> 創建會員</label><br>
                    <label><input type="checkbox" class="subCkb" id="ckb7" data-Parent="ckbMain2" value="EditMemberAddress"> 修改會員地址</label><br>
                    <label><input type="checkbox" class="subCkb" id="ckb8" data-Parent="ckbMain2" value="EditMemberPhone"> 修改會員電話</label><br>
                    <label><input type="checkbox" class="subCkb" id="ckb9" data-Parent="ckbMain2" value="EditMemberEmail"> 修改會員信箱</label><br>
                    <label><input type="checkbox" class="subCkb" id="ckb10" data-Parent="ckbMain2" value="EditMemberLevel"> 修改會員等級</label><br>
                </div>
                <input type="checkbox" id="ckbMain3"> 訂單管理
                <div style="padding-left: 20px;">
                    <label><input type="checkbox" class="subCkb" id="ckb11" data-Parent="ckbMain3" value="SelectOrder"> 搜尋訂單</label><br>
                    <label><input type="checkbox" class="subCkb" id="ckb12" data-Parent="ckbMain3" value="EditOrderPrice"> 修改訂單金額</label><br>
                    <label><input type="checkbox" class="subCkb" id="ckb13" data-Parent="ckbMain3" value="EditOrderStatus"> 修改訂單狀態</label><br>
                </div>
                <input type="checkbox" id="ckbMain4"> 商品管理
                <div style="padding-left: 20px;">
                    <label><input type="checkbox" class="subCkb" id="ckb14" data-Parent="ckbMain4" value="SelectProduct"> 搜尋商品</label><br>
                    <label><input type="checkbox" class="subCkb" id="ckb15" data-Parent="ckbMain4" value="CreateProduct"> 創建商品</label><br>
                    <label><input type="checkbox" class="subCkb" id="ckb16" data-Parent="ckbMain4" value="EditProductName"> 修改商品名</label><br>
                    <label><input type="checkbox" class="subCkb" id="ckb17" data-Parent="ckbMain4" value="EditProductDescription"> 修改商品描述</label><br>
                    <label><input type="checkbox" class="subCkb" id="ckb18" data-Parent="ckbMain4" value="EditProductPrice"> 修改商品價錢</label><br>
                    <label><input type="checkbox" class="subCkb" id="ckb19" data-Parent="ckbMain4" value="EditProductQuantity"> 修改商品庫存</label><br>
                    <label><input type="checkbox" class="subCkb" id="ckb20" data-Parent="ckbMain4" value="EditProductCategory"> 修改商品分類</label><br>
                    <label><input type="checkbox" class="subCkb" id="ckb21" data-Parent="ckbMain4" value="EditProductStatus"> 修改商品狀態</label><br>
                    <label><input type="checkbox" class="subCkb" id="ckb22" data-Parent="ckbMain4" value="DelProduct"> 商除商品</label><br>
                </div>
                <input type="checkbox" id="ckbMain5"> 商品分類管理
                <div style="padding-left: 20px;">
                    <label><input type="checkbox" class="subCkb" id="ckb23" data-Parent="ckbMain5" value="SelectCategory"> 搜尋分類</label><br>
                    <label><input type="checkbox" class="subCkb" id="ckb24" data-Parent="ckbMain5" value="EditCategory"> 修改分類</label><br>
                </div>
                <div class="d-flex">
                    <label id="labelRoleName"> 輸入名稱：<input type="text" name="name" id="txbRoleName" value="" required /></label>
                    <label id="labelRoleDiscript"> 描述角色：<input type="text" name="name" id="txbRoleDiscript" value="" required /></label>
                    <button id="btnSubmitAddRole" class="btnSubmitRole btn btn-outline-dark ms-2" style="display:block">提交</button>
                    <button id="btnSubmitEditRole" class="btnSubmitRole btn btn-outline-dark ms-2" style="display:block">提交</button>
                </div>
            </div>
        </div>


        <script>

            getAllRole();
            function getAllRole() {
                axios.post("/UserRole/GetAllRole")
                    .then(response => {
                        populateTable(response.data);
                    })
                    .catch(error => {
                        console.error("fail", error);
                    })
            }

            function populateTable(roles) {
                const tableBody = document.getElementById("roleTable").getElementsByTagName('tbody')[0];
                tableBody.innerHTML = '';

                roles.forEach((role, index) => {
                    const row = document.createElement('tr');

                    const rowSort = document.createElement('th');
                    rowSort.textContent = index + 1;
                    rowSort.scope = "row";
                    row.appendChild(rowSort);

                    const cellId = document.createElement('td');
                    cellId.textContent = role.RoleId;
                    row.appendChild(cellId);

                    const cellName = document.createElement('td');
                    cellName.textContent = role.Name;
                    row.appendChild(cellName);

                    const cellDescription = document.createElement('td');
                    cellDescription.textContent = role.Description;
                    row.appendChild(cellDescription);

                    const cellEdit = document.createElement('td');

                    const cellEditBtn = document.createElement("button");
                    document.getElementById('ckbPopUp')
                    cellEditBtn.className = "btnEditRole";
                    cellEditBtn.id = "btnShowEditRoleCkb";
                    cellEditBtn.addEventListener("click", function () {
                        axios.post("/UserRole/GetRolePermissions", { RoleId: role.RoleId })
                            .then(response => {
                                checkPermission(response.data);
                            })
                            .catch(error => {
                                console.error("fail", error);
                            })
                        document.getElementById("overlay").style.display = "block";
                        document.getElementById("ckbPopUp").style.display = "block";
                        document.getElementById("btnSubmitEditRole").style.display = "block";
                        document.getElementById("btnSubmitAddRole").style.display = "none";
                        document.getElementById("txbRoleName").value = role.Name;
                        document.getElementById("txbRoleDiscript").value = role.Description;
                        document.getElementById("btnSubmitEditRole").addEventListener("click", function () {
                            EditRole(role.RoleId)
                        });
                    })
                    cellEdit.appendChild(cellEditBtn);

                    const cellDeleteBtn = document.createElement("button");
                    cellDeleteBtn.className = "btnDeleteRole";
                    cellDeleteBtn.addEventListener("click", function () {
                        delRole(role.RoleId);
                    });
                    cellEdit.appendChild(cellDeleteBtn);


                    if (role.RoleId != "1") {
                        row.appendChild(cellEdit);
                    }

                    tableBody.appendChild(row);
                });
            }

            function delRole(roleId) {
                Swal.fire({
                    title: '確定要刪除這個項目嗎？',
                    text: "這個操作無法恢復！",
                    icon: 'warning',
                    showCancelButton: true,
                    confirmButtonText: '刪除',
                    cancelButtonText: '取消'
                }).then((result) => {
                    if (result.isConfirmed) {
                        axios.post("/UserRole/DeleteRole", { RoleId: roleId })
                            .then(response => {

                                if (response.data == "刪除失敗") {
                                    Swal.fire({
                                        title: '刪除失敗',
                                        text: "有使用者持有此角色！",
                                        icon: 'warning',
                                        confirmButtonText: '確認'
                                    })
                                }

                                if (response.data == "刪除成功") {
                                    Swal.fire({
                                        title: '刪除成功！',
                                        icon: 'warning',
                                        confirmButtonText: '確認'
                                    }).then((result) => { window.location.href = "/UserRole/Index" })
                                }
                            })
                            .catch(error => { console.error(error) })
                    }
                })
            }

            function selectRole() {
                var searchInput = document.getElementById('txbSelectRoleId');
                var selectRoleId = searchInput.value;
                var regex = new RegExp(searchInput.pattern);
                var inputValue = searchInput.value;

                if (!regex.test(inputValue)) {
                    document.getElementById("searchWarning").innerText = "請輸入8位以內數字";
                    return;
                }

                document.getElementById("searchWarning").innerText = " ";

                axios.post("/UserRole/SelectRole", { RoleId: selectRoleId })
                    .then(response => {
                        let roles = response.data;

                        if (!(roles == "noRole")) {

                            if (!Array.isArray(roles)) {
                                roles = [roles];
                            }

                            populateTable(roles);
                        }
                        else {
                            document.getElementById("roleTable").getElementsByTagName('tbody')[0].innerHTML = "";
                        }
                    })
                    .catch(error => {
                        console.error("fail", error);
                    })
            }

            function checkPermission(permissions) {
                const subCkbs = document.querySelectorAll('.subCkb');
                const mainCkbs = document.querySelectorAll('input[type="checkbox"][id^="ckbMain"]');
                let havePermissionFlag = new Array(subCkbs.length)

                //設定flag為真(flag為擁有的權限)
                permissions.forEach((permission) => {
                    for (var i = 0; i < subCkbs.length; i++) {
                        if (permission === subCkbs[i].value) {
                            havePermissionFlag[i] = true;
                        }
                    }
                })

                //勾選擁有的權限
                for (var i = 0; i < subCkbs.length; i++) {
                    if (havePermissionFlag[i]) {
                        subCkbs[i].checked = true;
                    } else {
                        subCkbs[i].checked = false;
                    }
                }

                mainCkbs.forEach(function (mainCkb) {
                    let parentId = mainCkb.id;
                    let mainCheckFlag = true;
                    let subCkbsForMain = document.querySelectorAll(`.subCkb[data-Parent="${parentId}"]`);
                    subCkbsForMain.forEach(function (subCkb) {
                        if (!subCkb.checked) { mainCheckFlag = false }
                    });

                    if (mainCheckFlag) mainCkb.checked = true;
                });
            }
        </script>

        <script>
            const btnShowAddRoleCkb = document.getElementById("btnShowAddRoleCkb");
            const btnShowEditRoleCkb = document.getElementById("btnShowEditRoleCkb");
            const popUp = document.getElementById("ckbPopUp");
            const btnCloseCkb = document.getElementById("btnCloseCkb");
            const roleName = document.getElementById("txbRoleName");
            const roleDiscript = document.getElementById("txbRoleDiscript");
            const btnSubmitAddRole = document.getElementById("btnSubmitAddRole");
            const btnSubmitEditRole = document.getElementById("btnSubmitEditRole");

            const mainCkbs = document.querySelectorAll('input[type="checkbox"][id^="ckbMain"]');
            const subCkbs = document.querySelectorAll('.subCkb');

            btnShowAddRoleCkb.addEventListener("click", function () {
                subCkbs.forEach(function (subCkb) {
                    subCkb.checked = false;
                })
                mainCkbs.forEach(function (mainCkb) {
                    mainCkb.checked = false;
                })
                popUp.style.display = "block";
                btnSubmitAddRole.style.display = "block";
                btnSubmitEditRole.style.display = "none";
                document.getElementById("overlay").style.display = "block";
                document.getElementById("btnSubmitAddRole").style.display = "block";
                roleName.value = "";
                roleDiscript.value = "";
            })


            btnCloseCkb.addEventListener("click", function () {
                document.getElementById("overlay").style.display = "none";
                popUp.style.display = "none";
            });

            mainCkbs.forEach(function (mainCkb) {
                mainCkb.addEventListener("change", function () {
                    const parentId = mainCkb.id;
                    const subCkbsForMain = document.querySelectorAll(`.subCkb[data-Parent="${parentId}"]`);
                    subCkbsForMain.forEach(function (subCkb) {
                        subCkb.checked = mainCkb.checked;
                    });
                });
            });

            btnSubmitAddRole.addEventListener("click", function () {
                const selectedCkbs = [];

                subCkbs.forEach(function (subCkb) {
                    if (subCkb.checked) {
                        selectedCkbs.push(subCkb.value);
                    }
                });

                const roleName = document.getElementById("txbRoleName");
                const roleDiscript = document.getElementById("txbRoleDiscript");

                if (roleName.value == "" || roleDiscript.value == "") {
                    Swal.fire({
                        title: '名稱及敘述請勿填空！',
                        icon: 'warning',
                        confirmButtonText: '確認'
                    })
                    return;
                }

                axios.post("/UserRole/AddRole", { selectedCkbs, roleName: roleName.value, roleDiscript: roleDiscript.value })
                    .then(response => {
                        popUp.style.display = "none";
                        window.location.href = "/UserRole/Index";
                    })
                    .catch(error => {
                    });
            });

            function EditRole(roleId) {
                const selectedCkbs = [];

                subCkbs.forEach(function (subCkb) {
                    if (subCkb.checked) {
                        selectedCkbs.push(subCkb.value);
                    }
                });

                if (roleName.value == "" || roleDiscript.value == "") {
                    Swal.fire({
                        title: '名稱及敘述請勿填空！',
                        icon: 'warning',
                        confirmButtonText: '確認'
                    })
                    return;
                }

                axios.post("/UserRole/EditRole", { selectedCkbs, roleId: roleId, roleName: roleName.value, roleDiscript: roleDiscript.value })
                    .then(response => {
                        document.getElementById("overlay").style.display = "none";
                        popUp.style.display = "none";
                        window.location.href = "/UserRole/Index";
                    })
                    .catch(error => {
                    });
            }

        </script>
    </main>
</body>